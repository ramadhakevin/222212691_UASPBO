/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package perpus.gui;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import static java.util.regex.Pattern.matches;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import perpus.entity.Mahasiswa;
import perpus.repository.MahasiswaRepository;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
/**
 *
 * @author kevinramadha
 */
public class MahasiswaPanel extends javax.swing.JPanel {

    /**
     * Creates new form MahasiswaPanel
     */
    public MahasiswaPanel() {
        initComponents();
        
        afterInitComponent();
        setColoumnWidth();
        loadTableData();
    }
    
    private void afterInitComponent(){
        DefaultTableCellRenderer headRender = new DefaultTableCellRenderer();
        headRender.setFont(new Font("Arial Rounded MT Bold", Font.PLAIN, 12));
        headRender.setBackground(new Color(20, 108, 148));
        headRender.setForeground(new Color(255, 255, 255));
        headRender.setHorizontalAlignment( JLabel.CENTER );
        mahasiswaTable.getTableHeader().setDefaultRenderer(headRender);
        
        DefaultTableCellRenderer recordRender = new DefaultTableCellRenderer();
        recordRender.setHorizontalAlignment(JLabel.CENTER);
        for (int i=0; i<mahasiswaTable.getColumnCount();i++){
            mahasiswaTable.setDefaultRenderer(mahasiswaTable.getColumnClass(i),recordRender);
        }    
    }
    
    private void setColoumnWidth(){
        TableColumnModel columnModel = mahasiswaTable.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(0).setMaxWidth(1000);
        columnModel.getColumn(0).setMinWidth(100);
        
        columnModel.getColumn(1).setPreferredWidth(245);
        columnModel.getColumn(1).setMaxWidth(1000);
        columnModel.getColumn(1).setMinWidth(245);
        
        columnModel.getColumn(2).setPreferredWidth(60);
        columnModel.getColumn(2).setMaxWidth(1000);
        columnModel.getColumn(2).setMinWidth(60);
        
        columnModel.getColumn(3).setPreferredWidth(127);
        columnModel.getColumn(3).setMaxWidth(1000);
        columnModel.getColumn(3).setMinWidth(127);
        
        columnModel.getColumn(4).setPreferredWidth(115);
        columnModel.getColumn(4).setMaxWidth(1000);
        columnModel.getColumn(4).setMinWidth(115);
    }
    
    private void loadTableData(){
        DefaultTableModel dtm = (DefaultTableModel)mahasiswaTable.getModel();
        //refresh tabel
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
        try {
            //isi tabel
            for(Mahasiswa mhs:MahasiswaRepository.getInstance().getList()){
                dtm.addRow(new Object[]{mhs.getNim(),mhs.getNama(),mhs.getKelas(),mhs.getProdi(),mhs.getJumlahPinjam()});
            }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidePanel = new javax.swing.JPanel();
        nimLabel = new javax.swing.JLabel();
        nimTextField = new javax.swing.JTextField();
        namaLabel = new javax.swing.JLabel();
        namaTextField = new javax.swing.JTextField();
        kelasLabel = new javax.swing.JLabel();
        kelasTextField = new javax.swing.JTextField();
        prodiLabel = new javax.swing.JLabel();
        prodiComboBox = new javax.swing.JComboBox<>();
        jumlahPinjamLabel = new javax.swing.JLabel();
        removeButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jumlahPinjamSpinner = new javax.swing.JSpinner();
        eksportLaporanXlsButton = new javax.swing.JButton();
        eksportLaporanCsvButton1 = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mahasiswaTable = new javax.swing.JTable();

        sidePanel.setBackground(new java.awt.Color(3, 4, 94));

        nimLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        nimLabel.setForeground(new java.awt.Color(255, 255, 255));
        nimLabel.setText("NIM");

        nimTextField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        nimTextField.setForeground(new java.awt.Color(20, 108, 148));
        nimTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nimTextFieldActionPerformed(evt);
            }
        });

        namaLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        namaLabel.setForeground(new java.awt.Color(255, 255, 255));
        namaLabel.setText("Nama");

        namaTextField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        namaTextField.setForeground(new java.awt.Color(20, 108, 148));
        namaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaTextFieldActionPerformed(evt);
            }
        });

        kelasLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        kelasLabel.setForeground(new java.awt.Color(255, 255, 255));
        kelasLabel.setText("Kelas");

        kelasTextField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        kelasTextField.setForeground(new java.awt.Color(20, 108, 148));
        kelasTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kelasTextFieldActionPerformed(evt);
            }
        });

        prodiLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        prodiLabel.setForeground(new java.awt.Color(255, 255, 255));
        prodiLabel.setText("Prodi");

        prodiComboBox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        prodiComboBox.setForeground(new java.awt.Color(3, 4, 94));
        prodiComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "D3 Statistika", "Statistika", "Komputasi Statistik", "Sains Data", "Sistem Informasi", "Statistika Ekonomi", "Statistika Kependudukan" }));
        prodiComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodiComboBoxActionPerformed(evt);
            }
        });

        jumlahPinjamLabel.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jumlahPinjamLabel.setForeground(new java.awt.Color(255, 255, 255));
        jumlahPinjamLabel.setText("Jumlah Pinjam");

        removeButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        removeButton.setForeground(new java.awt.Color(3, 4, 94));
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        editButton.setForeground(new java.awt.Color(3, 4, 94));
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(3, 4, 94));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(0, 180, 216));
        clearButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(255, 255, 255));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        eksportLaporanXlsButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        eksportLaporanXlsButton.setForeground(new java.awt.Color(3, 4, 94));
        eksportLaporanXlsButton.setText("Laporan .xls");
        eksportLaporanXlsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eksportLaporanXlsButtonActionPerformed(evt);
            }
        });

        eksportLaporanCsvButton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        eksportLaporanCsvButton1.setForeground(new java.awt.Color(3, 4, 94));
        eksportLaporanCsvButton1.setText("Laporan .csv");
        eksportLaporanCsvButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eksportLaporanCsvButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(eksportLaporanXlsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jumlahPinjamLabel)
                    .addComponent(prodiLabel)
                    .addComponent(kelasLabel)
                    .addComponent(namaLabel)
                    .addComponent(nimLabel)
                    .addComponent(nimTextField)
                    .addComponent(namaTextField)
                    .addComponent(prodiComboBox, 0, 0, Short.MAX_VALUE)
                    .addComponent(kelasTextField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidePanelLayout.createSequentialGroup()
                        .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(addButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jumlahPinjamSpinner)
                    .addComponent(eksportLaporanCsvButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(nimLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nimTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(namaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(kelasLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kelasTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(prodiLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prodiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jumlahPinjamLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jumlahPinjamSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(editButton))
                .addGap(18, 18, 18)
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(clearButton))
                .addGap(18, 18, 18)
                .addComponent(eksportLaporanXlsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eksportLaporanCsvButton1)
                .addContainerGap())
        );

        mahasiswaTable.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        mahasiswaTable.setForeground(new java.awt.Color(20, 108, 148));
        mahasiswaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NIM", "Nama", "Kelas", "Prodi", "Jumlah Pinjam"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        mahasiswaTable.setSelectionBackground(new java.awt.Color(252, 255, 178));
        mahasiswaTable.setSelectionForeground(new java.awt.Color(20, 108, 148));
        mahasiswaTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mahasiswaTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(mahasiswaTable);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void namaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaTextFieldActionPerformed

    private void kelasTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kelasTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kelasTextFieldActionPerformed

    private void mahasiswaTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mahasiswaTableMouseClicked
        // TODO add your handling code here:
        int row = mahasiswaTable.getSelectedRow();
        DefaultTableModel dtm = (DefaultTableModel)mahasiswaTable.getModel();
        nimTextField.setText(dtm.getValueAt(row,0).toString());
        namaTextField.setText(dtm.getValueAt(row,1).toString());
        kelasTextField.setText(dtm.getValueAt(row,2).toString());
        
        if (matches((dtm.getValueAt(row,3).toString()),"D3 Statistika"))
            prodiComboBox.setSelectedIndex(0);
        else if (matches((dtm.getValueAt(row,3).toString()),"Statistika"))
            prodiComboBox.setSelectedIndex(1);
        else if (matches((dtm.getValueAt(row,3).toString()),"Komputasi Statistik"))
            prodiComboBox.setSelectedIndex(2);
        else if (matches((dtm.getValueAt(row,3).toString()),"Sains Data"))
            prodiComboBox.setSelectedIndex(3);
        else if (matches((dtm.getValueAt(row,3).toString()),"Sistem Informasi"))
            prodiComboBox.setSelectedIndex(4);
        else if (matches((dtm.getValueAt(row,3).toString()),"Statistika Ekonomi"))
            prodiComboBox.setSelectedIndex(5);
        else if (matches((dtm.getValueAt(row,3).toString()),"Statistika Kependudukan"))
            prodiComboBox.setSelectedIndex(6);
        
        jumlahPinjamSpinner.setValue(dtm.getValueAt(row,4));
    }//GEN-LAST:event_mahasiswaTableMouseClicked

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        if (matches(nimTextField.getText(),"")){
            JOptionPane.showMessageDialog(this, "Pastikan Pilih Data Mahasiswa");
        } else{
            Mahasiswa mhs = new Mahasiswa();
            mhs.setNim(nimTextField.getText());
            mhs.setNama(namaTextField.getText());
            mhs.setKelas(kelasTextField.getText());
            mhs.setProdi(prodiComboBox.getSelectedItem().toString());
            mhs.setJumlahPinjam((Integer) jumlahPinjamSpinner.getValue());

            try {
                MahasiswaRepository.getInstance().delete(mhs);
                clearForm();
                JOptionPane.showMessageDialog(this, "Sukses Terhapus");
                loadTableData();
            } catch (SQLException ex) {
                System.err.println(ex);
                JOptionPane.showMessageDialog(this, "Gagal menghapus data", "Gagal", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void nimTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nimTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nimTextFieldActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        if (matches(nimTextField.getText(),"")){
            JOptionPane.showMessageDialog(this, "Pastikan Pilih Data Mahasiswa");
        } else{
            Mahasiswa mhs = new Mahasiswa();
            mhs.setNim(nimTextField.getText());
            mhs.setNama(namaTextField.getText());
            mhs.setKelas(kelasTextField.getText());
            mhs.setProdi(prodiComboBox.getSelectedItem().toString());
            mhs.setJumlahPinjam((Integer) jumlahPinjamSpinner.getValue());

            try {
                MahasiswaRepository.getInstance().update(mhs);
                clearForm();
                JOptionPane.showMessageDialog(this, "Perubahan Tersimpan");
                loadTableData();
            } catch (SQLException ex) {
                System.err.println(ex);
                JOptionPane.showMessageDialog(this, "Gagal mengubah data", "Gagal", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        if (matches(nimTextField.getText(),"")){
            JOptionPane.showMessageDialog(this, "Pastikan Form Terisi");
        } else{
            Mahasiswa mhs = new Mahasiswa();
            mhs.setNim(nimTextField.getText());
            mhs.setNama(namaTextField.getText());
            mhs.setKelas(kelasTextField.getText());
            mhs.setProdi(prodiComboBox.getSelectedItem().toString());
            mhs.setJumlahPinjam((Integer) jumlahPinjamSpinner.getValue());

            try {
                MahasiswaRepository.getInstance().insert(mhs);
                clearForm();
                JOptionPane.showMessageDialog(this, "Sukses Tersimpan");
                loadTableData();
            } catch (SQLException ex) {
                System.err.println(ex);
                JOptionPane.showMessageDialog(this, "Gagal menyimpan data", "Gagal", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void prodiComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodiComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prodiComboBoxActionPerformed
    public void openFile(String file){
        try{
            File path = new File(file);
            Desktop.getDesktop().open(path);
        }catch(IOException ioe){
            System.out.println(ioe);
        }
    }
    
    private void eksportLaporanXlsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eksportLaporanXlsButtonActionPerformed
        // TODO add your handling code here:
        try{
           JFileChooser jFileChooser = new JFileChooser();
           jFileChooser.showSaveDialog(this);
           File saveFile = jFileChooser.getSelectedFile();
           
           if(saveFile != null){
               saveFile = new File(saveFile.toString()+".xlsx");
               Workbook wb = new XSSFWorkbook();
               Sheet sheet = wb.createSheet("Laporan");
               
               org.apache.poi.ss.usermodel.Row rowCol = sheet.createRow(0);
               for(int i=0;i<mahasiswaTable.getColumnCount();i++){
                   Cell cell = rowCol.createCell(i);
                   cell.setCellValue(mahasiswaTable.getColumnName(i));
               }
               
               for(int j=0;j<mahasiswaTable.getRowCount();j++){
                   org.apache.poi.ss.usermodel.Row row = sheet.createRow(j+1);
                   for(int k=0;k<mahasiswaTable.getColumnCount();k++){
                       Cell cell = row.createCell(k);
                       if(mahasiswaTable.getValueAt(j, k)!=null){
                           cell.setCellValue(mahasiswaTable.getValueAt(j, k).toString());
                       }
                   }
               }
               FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
               wb.write(out);
               wb.close();
               out.close();
               openFile(saveFile.toString());
           }else{
               JOptionPane.showMessageDialog(null,"Dibatalkan");
           }
        }catch(FileNotFoundException e){
            System.out.println(e);
        }catch(IOException io){
            System.out.println(io);
        }
    }//GEN-LAST:event_eksportLaporanXlsButtonActionPerformed

    private void eksportLaporanCsvButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eksportLaporanCsvButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file save");
        fileChooser.setFileFilter(new FileNameExtensionFilter("CSV Files", "csv")); // Menambahkan filter file CSV
        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            String filePath = fileToSave.getAbsolutePath();

            // Menambahkan ekstensi .csv jika belum ada
            if (!filePath.toLowerCase().endsWith(".csv")) {
                fileToSave = new File(filePath + ".csv");
            }

            try {
                FileWriter fw = new FileWriter(fileToSave);
                BufferedWriter bw = new BufferedWriter(fw);

                // Menulis judul kolom
                for (int i = 0; i < mahasiswaTable.getColumnCount(); i++) {
                    bw.write(mahasiswaTable.getColumnName(i) + ",");
                }
                bw.newLine();

                // Menulis data ke file
                for (int i = 0; i < mahasiswaTable.getRowCount(); i++) {
                    for (int j = 0; j < mahasiswaTable.getColumnCount(); j++) {
                        Object value = mahasiswaTable.getValueAt(i, j);
                        if (value != null) {
                            bw.write(value.toString() + ",");
                        } else {
                            bw.write("NULL,");
                        }
                    }
                    bw.newLine();
                }

                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(this, "SUCCESSFULLY SAVED", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

                // Membuka file setelah penulisan selesai
                openFile(fileToSave.getAbsolutePath());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "ERROR", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_eksportLaporanCsvButton1ActionPerformed

    private void clearForm(){
        nimTextField.setText("");
        namaTextField.setText("");
        kelasTextField.setText("");
        prodiComboBox.setSelectedIndex(-1);
        jumlahPinjamSpinner.setValue(0);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton eksportLaporanCsvButton1;
    private javax.swing.JButton eksportLaporanXlsButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jumlahPinjamLabel;
    private javax.swing.JSpinner jumlahPinjamSpinner;
    private javax.swing.JLabel kelasLabel;
    private javax.swing.JTextField kelasTextField;
    private javax.swing.JTable mahasiswaTable;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel namaLabel;
    private javax.swing.JTextField namaTextField;
    private javax.swing.JLabel nimLabel;
    private javax.swing.JTextField nimTextField;
    private javax.swing.JComboBox<String> prodiComboBox;
    private javax.swing.JLabel prodiLabel;
    private javax.swing.JButton removeButton;
    private javax.swing.JPanel sidePanel;
    // End of variables declaration//GEN-END:variables
}
